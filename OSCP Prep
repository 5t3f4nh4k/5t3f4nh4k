# OSCP Prep
===========

### Basic Linux Commands:

man ls                        #man for ls
man -k passwd                 #search in the description for "passwd"
apropos passwd                # same as "man -p passwd"
mkdir "some name"             #create one dir
mkdir -p test/{one,two,three} # create test parrent dir with 3 dirs inside
echo $PATH                    #show dirs in $PATH
which sbd                     #search sbd in dirs from $PATH
locate sbd.exe                #search sbd.exe / quicker than find
sudo updatedb                 #update the locate.db
sudo find / -name sbd*

### Managing Kali Linux Services

sudo systemctl start ssh      #start ssh service
sudo ss -antlp | grep sshd    #using ss and grep to confirm that sshd has been started and running
sudo sustemctl enable ssh     #ssh start at boot  ##we can use apache2 to start HTTP sevice the same way
systemctl list-unit-files     #see table af all available services

### Searching ,INstalling, Removing Tools

sudo apt update
apt-cache search pure-ftpd    #check if pure-httpd is in the Kali repos, it searches in the descriptions, not only package name
apt show resources-agents     #shows description of the resources-agents
sudo apt install pure-https   #install package
apt remove --purge pure-ftpd  #uninstall package (purge removes all data)
sudo dpkg -i man-db_2.7.0.2-5_amd64.deb # -i == --install  ## install package ### don't require to be online #### install with path to deb file

# Bash Environment

echo $PATH                    #search those dirs, when execute command w/o abs path
echo $USER                    #display current username
echo $PWD                     #current dir
echo $HOME                    #home dir

```
export b=10.10.11.11          #with export we can use the var from other shells(Global Var) ## example below
ping -c 2 $b                  #ping with use of var instead the ip address
```

```example
echo "$$" --> 1872
var="My Var"
echo $var --> My Var
bash      --> we are in bash now
echo "$$"  --> 1908
echo $var   --> nothing
exit
# we are in the firsh shell again
echo $Var --> My Var
export othervar="Global Var"
echo $othervar --> Global Var
bash
# we are in bash again
echo $othervar --> Globalvar
```

env                           #show all environment variables

# Bash History Tricks

history
!1
!!                             #some long command, then only !! to execute it as sudo ## in the PWK pdf they say that !! sepeat the last command, but I tried and repeat it with SUDO!

#3.2 Piping and Redirection

echo "test" > redirection_test.txt      #write to the file
scho "test222" >> redirection_test.txt  #append to the file
wc -m < redirect_test.txt --> return word count 89
ls ./test --> error message "no such file" or similar
ls ./test 2>error.txt --> redirect the error message to file

#3.3 Text Search and Manipulation

grep
ls -la /usr/bin | grep zip      #show only lines consist zip in them
sed
echo "I need to try hard" | sed 's/hard/harder/' --> I need to try harder   #sed perform text editing on files or standard output
cut
Echo "I hack binaries, web apps, hkhkhkhkh else" | cut -f 2 -d "," --> web app
cut -d ":" -f 1 /etc/passwd --> show only usernames from the passwd file
awk
echo "hello::there::friend" | awk -F "::" '{print $1, $3}' --> hello friend

#3.4 Editing Files From the Command Line

nano asd.txt
Ctrl+o = save file // Ctrl+k = cut current line // Ctrl+u = uncut line and paste it at cursor location // Ctrl+w = search // Ctrl+x = exit
vi asd.txt
i = insert text // Esc = exit i mode // dd = del curent line // yy = copy current line // p = paste clipboard // x = del current character //:w = save file and stay in //:q! = quit w/o save // :wq! = save and quit

#3.5 Compare Files

com a.txt b.txt
com -n a b              #n = 1,2or3 = suppress column
diff -c a.txt b.txt     #c -line in 1st file, +line in 2nd file
diff -u a.txt b.txt     #unified format = short output
vimdiff                 #visually show diferences in vi

#3.6 Managing Processes

command&              #run command in bg
command   Ctrl+z      #suspend
jobs                  # show suspended jobs
fg %1                 #fg first job
ps                    #ps -ef -->all ps-s // ps -fC leafpad --> find proc id num of leafpad
kill 666

#3.7 File and Command Monitoring

tail -f               #observe live the changes
tail -x               #num of lines
watch -n 5 w          #observe on 5 seconds w command

#3.8 Downloading Files

wget -O saveName.pdf https://site.com/dir/file.pdf      #save file to local machine
curl -o saveName.pdf https://site.com/dir/file.pdf      #save file to local machine ## can be used for data transfers to or from dest
axel -a -n 20 -o name.pdf https://site.com/dir/file.pdf #download axelarator -n treats // -a more info? ##speedup downloads

#3.9 Customizing the Bash Environment

export HISTCONTROL=ignoredups         #ignore duplicates // or ignore commands begin with space " " //by default both are ignored
export HISTIGNORE="&:ls:[bf]g:exit:history"   #ignore frequently used commands ls bg/fg ..,
export HISTTIMEFORMAT='%F %T ' --> 1 2019-04-23 11:29:53 command ..,
man strtime                           #other time formats can be found here

# Alias

alias lsa='ls -la'
unalias lsa             #when lsa error --> lsa: missing operand
nano ~/.bashrc // ~/.zsh.rc       #permanent alias







